---
swagger: "2.0"
info:
  version: "2017-04-22T19:59:42Z"
  title: "tasks"
host: "jmfr1rlzw5.execute-api.us-east-1.amazonaws.com"
basePath: "/development"
schemes:
- "https"
paths:
  /tasks:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($allTasks = $util.parseJson($input.path('$')))\n\
                [\n#foreach($task in $allTasks)\n    {\n        \"user\" : \"$task.user\"\
                ,\n        \"description\" : \"$task.description\",\n        \"priority\"\
                \ : $task.priority,\n        \"completed\" : \"$task.completed\"\n\
                \    }\n    #if($foreach.hasNext),#end\n#end\n]\n"
        requestTemplates:
          application/json: "\"\"\n"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:178161805723:function:retrieve_task/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "task"
        required: true
        schema:
          $ref: "#/definitions/task"
      responses:
        201:
          description: "201 response"
          headers:
            Location:
              type: "string"
        400:
          description: "400 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "201"
            responseParameters:
              method.response.header.Location: "integration.response.body.resourceUri"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{ }\n"
          .*ValidationException.*:
            statusCode: "400"
            responseTemplates:
              application/json: "{ \"error\": \"$input.path('$.errorMessage')\" }\n"
        requestTemplates:
          application/json: "{\n    \"resourceUri\": \"$context.resourcePath\",\n\
            \    \"user\": \"$input.path('$.user')\",\n    \"description\": \"$input.path('$.description')\"\
            ,\n    \"priority\": \"$input.path('$.priority')\",\n    \"completed\"\
            : \"$input.path('$.completed')\"\n}\n"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:178161805723:function:create_task/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
  /tasks/{id}:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
        400:
          description: "400 response"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{ }\n"
          .*ValidationException.*:
            statusCode: "400"
            responseTemplates:
              application/json: "{ \"error\": \"$input.path('$.errorMessage')\" }\n"
        requestTemplates:
          application/json: "## There is probably a way I can do this without hardcoding\n\
            ## them, probably iterating on all properties\n{\n    \"id\": \"$input.params('id')\"\
            ,\n    \"user\": \"$input.path('$.user')\",\n    \"description\": \"$input.path('$.description')\"\
            ,\n    \"priority\": $input.path('$.priority'),\n    \"completed\": \"\
            $input.path('$.completed')\"\n}\n"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:178161805723:function:update_task/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
        400:
          description: "400 response"
        404:
          description: "404 response"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{ }\n"
          .*ValidationException.*:
            statusCode: "400"
            responseTemplates:
              application/json: "{ \"error\": \"$input.path('$.errorMessage')\" }\n"
          .*ObjectNotFoundException.*:
            statusCode: "404"
            responseTemplates:
              application/json: "{ \"error\": \"$input.path('$.errorMessage')\" }\n"
        requestTemplates:
          application/json: "\"$input.params('id')\"\n"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:178161805723:function:delete_task/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
definitions:
  task:
    type: "object"
    required:
    - "description"
    - "priority"
    properties:
      user:
        type: "string"
        description: "User's email address"
        title: "User"
        minLength: 5
        maxLength: 254
      description:
        type: "string"
        title: "Description of the task"
        minLength: 1
      priority:
        type: "integer"
        description: "Task priority, as a single-digit integer. 0 is highest priority"
        title: "Priority"
        minimum: 0.0
        maximum: 9.0
      completed:
        type: "string"
        format: "date-time"
        description: "Completed datetime, formatted as an ISO8601 string"
        title: "Completed"
    title: "A task"
